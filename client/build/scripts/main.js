const cellElements=document.querySelectorAll("[data-cell]"),pointers=document.querySelectorAll(".pointer-cell"),waitingMessage=document.getElementById("waitingMessage"),waitingText=document.querySelector("[data-message-text]"),winningText=document.querySelector("[data-winning-message-text]"),winningElement=document.getElementById("winningMessage"),restartButton=document.getElementById("restartButton"),bar=document.getElementById("turn-bar"),RED="#e91e63",YELLOW="#ffeb3b";let active,userColor;const{name:name,room:room}=Qs.parse(location.search,{ignoreQueryPrefix:!0}),makeMove=e=>{const t=e.target,s=active[t.dataset.col];s>=0?socket.emit("makeMove",s):(waitingText.innerHTML="Invalid Move",waitingMessage.classList.add("show"),setTimeout(()=>{waitingMessage.classList.remove("show")},1e3))},pointerOver=e=>{const t=e.target.dataset.col;pointers[t].classList.add(""+userColor)},pointerLeave=e=>{const t=e.target.dataset.col;pointers[t].classList.remove("red"),pointers[t].classList.remove("yellow")},socket=io();function checkWin(){return horizontalCheck()||verticalCheck()||diagonalCheck()}function colorMatch(e,t,s,n){return cellElements[e].dataset.peice==cellElements[t].dataset.peice&&cellElements[e].dataset.peice==cellElements[s].dataset.peice&&cellElements[e].dataset.peice==cellElements[n].dataset.peice&&" "!=cellElements[e].dataset.peice}function horizontalCheck(){for(let e=0;e<6;e++)for(let t=0;t<4;t++){let s=7*e+t;if(colorMatch(s,s+1,s+2,s+3))return!0}}function verticalCheck(){for(let e=0;e<21;e++)if(colorMatch(e,e+7,e+14,e+21))return!0}function diagonalCheck(){for(let e=0;e<3;e++)for(let t=0;t<4;t++){let s=7*e+t;if(colorMatch(s,s+8,s+16,s+24))return!0}for(let e=0;e<3;e++)for(let t=3;t<7;t++){let s=7*e+t;if(colorMatch(s,s+6,s+12,s+18))return!0}}function isFull(){for(let e=0;e<42;e++)if(" "==cellElements[e].dataset.peice)return!1;return!0}function endGame(e){waitingMessage.classList.remove("show"),winningText.innerHTML=null!=e?e+" wins!":"Draw",winningElement.classList.add("show"),cellElements.forEach(e=>{e.removeEventListener("click",makeMove),e.removeEventListener("mouseover",pointerOver),e.removeEventListener("mouseout",pointerLeave)})}socket.emit("joinRoom",{name:name,room:room}),socket.on("color",e=>{userColor=e}),socket.on("message",e=>{winningElement.classList.remove("show"),waitingMessage.classList.add("show"),waitingText.innerHTML=e}),restartButton.addEventListener("click",()=>{socket.emit("restart")}),socket.on("startGame",e=>{active=[35,36,37,38,39,40,41],bar.style.background="red"==userColor?RED:YELLOW,winningElement.classList.remove("show"),cellElements.forEach(e=>{e.addEventListener("click",makeMove),e.addEventListener("mouseover",pointerOver),e.addEventListener("mouseout",pointerLeave),e.dataset.peice=" ",e.classList.remove("yellow"),e.classList.remove("red")}),waitingMessage.classList.add("show"),e===userColor?waitingMessage.classList.remove("show"):waitingText.innerHTML="Opponent's move"}),socket.on("placeMove",({player:e,color:t,move:s})=>{const n=cellElements[s];console.log(n),n.classList.add(t),n.dataset.peice=e;const o=n.dataset.col;active[o]-=7;const a=document.querySelectorAll(`[data-col='${o}']`);active[o]<=0&&a.forEach(e=>{e.removeEventListener("click",e=>{makeMove(e)}),e.classList.add("empty")}),e===name?(waitingText.innerHTML="Opponent's move...",waitingMessage.classList.add("show")):waitingMessage.classList.remove("show"),checkWin()&&endGame(e),isFull()&&endGame(null)});